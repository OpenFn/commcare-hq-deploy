[program:{{ project }}-{{ environment }}-celery_ucr_indicator_queue]
environment={% for name, value in supervisor_env_vars.items %}{{ name }}="{{ value }}"{% if not forloop.last %},{% endif %}{% endfor %}
command={{ new_relic_command }}{{ virtualenv_current }}/bin/python {{ code_current }}/manage.py celery worker --queues=ucr_indicator_queue --events --loglevel=INFO --hostname={{ host_string }}_ucr_indicator_queue -P gevent --concurrency={{ celery_params.concurrency }}
directory={{ code_current }}
user={{ sudo_user }}
numprocs=1
autostart=true
autorestart=true
stopasgroup=true
killasgroup=true
stdout_logfile={{ log_dir }}/celery_ucr_indicator_queue.log
redirect_stderr=true
stderr_logfile={{ log_dir }}/celery_ucr_indicator_queue.error.log
startsecs=10
; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 60
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998
